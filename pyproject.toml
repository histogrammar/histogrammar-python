[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "histogrammar"
description = "Histograms for Pandas/Spark/Numpy"
keywords = [
    "pandas",
    "spark",
    "data-science",
    "data-analysis",
    "statistics",
    "python",
    "jupyter",
    "ipython"
]
readme = "README.rst"
requires-python = ">=3.9"
authors = [{ name = "Max Baak", email = "maxbaak@gmail.com" }, { name = "Jim Pivarski (DIANA-HEP)", email = "pivarski@fnal.gov" }]
maintainers = [{ name = "Max Baak", email = "maxbaak@gmail.com" }]
license = { type = "Apache Software License v2", file = "LICENSE" }
dependencies = [
    "numpy",
    "tqdm",
    "joblib>=0.14.0"
]
classifiers = ["Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
]
dynamic = ["version"]

[project.optional-dependencies]
pandas = [
    "pandas"
]
spark = [
    "pyspark",
]
test = [
    "ipykernel>=5.1.3",
    "jupyter_client>=5.2.3",
    "matplotlib",
    "pandas",
    "pre-commit>=2.9.0",
    "pytest-notebook>=0.6.1",
    "pytest>=4.0.2",
]
test_numpy_pre2 = [
    "numpy<2",
    "pandas<2",
]
test_spark_pre2 = [
    "pyspark<4; python_version <= '3.11'",
]

# files to be shipped with the installation, under: histogrammar/test_data and histogrammar/notebooks
# after installation, these can be found with the functions in resources.py
[tool.setuptools.package-data]
histogrammar = [
    "test_data/*.csv.gz",
    "test_data/*.json*",
    "notebooks/*tutorial*.ipynb",
]

[project.urls]
repository = "https://github.com/histogrammar/histogrammar-python"

[tool.semantic_release]
version_variable = [
    "histogrammar/version.py:version",
]
build_command = "pip install build && python -m build"

[tool.setuptools.dynamic]
version = { attr = "histogrammar.version.version" }

[tool.ruff]
line-length = 120

[tool.ruff.lint]
extend-select = [
    "E", # pyflakes `E`
    "W", # pyflakes `W`
    "I", # isort
    "UP", # pyupgrade
    "D212", # pydocstyle
    "D411", # pydocstyle
    "C4", # flake8-comprehensions
    "FA", # flake8-future-annotations
    "PIE", # flake8-pie
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "PTH", # flake8-use-pathlib
    "PL", # pylint
    "FURB", # refurb
]
ignore = [
    "EM102", # f string in exception
    "PLR0913", # Too many arguments in function definition
    "PLR2004", # Magic value used in comparison
    "PLR1722", # Use `sys.exit()` instead of `exit`
    "PLR0915", # Too many statements (61 > 50)
    "UP038", # Use `X | Y` in `isinstance` call instead of `(X, Y)`
    "TCH003", # Move standard library import
    "TCH002", # Move third-party import `airflow.models.param.Param`
    "PLR0912", # Too many branches
]
